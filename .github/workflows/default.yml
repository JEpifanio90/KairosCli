# .github/workflows/release.yml

name: CI/CD

# This workflow is triggered on pushes to the main branch.
# It handles both building the project and creating a semantic release.
on:
  push:
    branches:
      - main
      - dev

env:
  CARGO_TERM_COLOR: always

# ensure that the workflow is only triggered once per PR, subsequent pushes to the PR will cancel
# and restart the workflow. See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run clippy action
        uses: clechasseur/rs-clippy-check@v3
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
  doc:
    # run docs generation on nightly rather than stable. This enables features like
    # https://doc.rust-lang.org/beta/unstable-book/language-features/doc-cfg.html which allows an
    # API be documented as only available in some specific platforms.
    needs: lint
    name: doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: Run cargo doc
        run: cargo doc --no-deps --all-features
        env:
          RUSTDOCFLAGS: --cfg docsrs
  test:
    needs: doc
    runs-on: ${{ matrix.os }}
    name: test ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Test Project
        run: cargo test --locked --all-features --all-targets
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build project
        run: cargo build --verbose --release
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: kairos
          path: target/release/kairos_cli
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install semantic-release dependencies
        run: npm install semantic-release @semantic-release/exec @semantic-release/github @semantic-release/git @semantic-release/commit-analyzer @semantic-release/release-notes-generator
      - name: Download kairos binary artifact
        uses: actions/download-artifact@v4
        with:
          name: kairos
      - name: Install cargo-set-version
        run: cargo install cargo-set-version
      - name: Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
